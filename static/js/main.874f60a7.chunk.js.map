{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","btnConteiner","btn","type","onClick","event","Notification","notifyMessage","text","Statistics","good","neutral","bad","total","positiveInTotal","list","item","isNaN","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","value","target","textContent","toLowerCase","setState","prevState","this","totalFeedback","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iWAMA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCJP,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,qBAAKP,UAAWC,IAAEO,aAAlB,SACE,wBACER,UAAWC,IAAEQ,IACbC,KAAK,SACLC,QAAS,SAAAC,GAAK,OAAIP,EAAgBO,IAHpC,SAKGL,KANgCA,M,qBCJzC,SAASM,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,cACtB,OACE,mCACE,mBAAGd,UAAWC,IAAEc,KAAhB,SAAuBD,M,oBCH7B,SAASE,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,QAASC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC/C,OACE,qBAAIrB,UAAWC,IAAEqB,KAAjB,UACE,qBAAItB,UAAWC,IAAEsB,KAAjB,mBAA8BN,KAC9B,qBAAIjB,UAAWC,IAAEsB,KAAjB,sBAAiCL,KACjC,qBAAIlB,UAAWC,IAAEsB,KAAjB,kBAA6BJ,KAC7B,qBAAInB,UAAWC,IAAEsB,KAAjB,oBAA+BH,KAC/B,qBAAIpB,UAAWC,IAAEsB,KAAjB,gCACsBC,MAAMH,GAAmB,EAAIA,EADnD,U,ICJAI,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBS,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKJ,MAAMT,KAAO,EAAKU,qBAAwB,M,EAGpEtB,gBAAkB,SAAAO,GAChB,IAAMmB,EAAQnB,EAAMoB,OAAOC,YAAYC,cACvC,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAQK,EAAUL,GAAS,O,4CAIhC,WACE,MAA+BM,KAAKX,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBmB,EAAgBD,KAAKV,qBACrBN,EAAkBgB,KAAKT,kCAE7B,OACE,qCACE,cAAC/B,EAAD,CAASC,MAAM,wBAAf,SACE,cAACK,EAAD,CACEC,QAASmC,OAAOC,KAAKH,KAAKX,OAC1BrB,gBAAiBgC,KAAKhC,oBAGP,IAAlBiC,EACC,cAACzB,EAAD,CAAcC,cAAc,sBAE5B,cAACjB,EAAD,CAASC,MAAM,aAAf,SACE,cAACkB,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOkB,EACPjB,gBAAiBA,a,GA7CboB,aAsDHhB,ICxDfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.874f60a7.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport { Section };\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <div className={s.btnConteiner} key={option}>\n      <button\n        className={s.btn}\n        type=\"button\"\n        onClick={event => onLeaveFeedback(event)}\n      >\n        {option}\n      </button>\n    </div>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport { FeedbackOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nfunction Notification({ notifyMessage }) {\n  return (\n    <>\n      <p className={s.text}>{notifyMessage}</p>\n    </>\n  );\n}\n\nNotification.propTypes = {\n  notifyMessage: PropTypes.string.isRequired,\n};\n\nexport { Notification };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ good, neutral, bad, total, positiveInTotal }) {\n  return (\n    <ul className={s.list}>\n      <li className={s.item}>Good: {good}</li>\n      <li className={s.item}>Neutral: {neutral}</li>\n      <li className={s.item}>Bad: {bad}</li>\n      <li className={s.item}>Total: {total}</li>\n      <li className={s.item}>\n        Positive feedback: {isNaN(positiveInTotal) ? 0 : positiveInTotal}%\n      </li>\n    </ul>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveInTotal: PropTypes.number.isRequired,\n};\nexport { Statistics };\n","import React, { Component } from 'react';\n\nimport { Section } from './components/Section/Section';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Notification } from './components/Notification/Notification';\nimport { Statistics } from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  onLeaveFeedback = event => {\n    const value = event.target.textContent.toLowerCase();\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveInTotal = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        {totalFeedback === 0 ? (\n          <Notification notifyMessage=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positiveInTotal={positiveInTotal}\n            />\n          </Section>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}