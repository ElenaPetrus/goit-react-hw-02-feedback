{"version":3,"sources":["components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","btnConteiner","btn","type","onClick","event","Statistics","state","Component","App","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","value","target","textContent","toLowerCase","setState","prevState","this","totalFeedback","positivePercentage","Object","keys","Notification","total","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8VAMA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCJP,SAASI,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,qBAAKP,UAAWC,IAAEO,aAAlB,SACE,wBAEER,UAAWC,IAAEQ,IACbC,KAAK,SACLC,QAAS,SAAAC,GAAK,OAAIP,EAAgBO,IAJpC,SAMGL,GALIA,Q,YCJPM,G,kNACJC,MAAQ,G,YADeC,cCCnBC,E,4MACJF,MAAQ,CACNG,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPC,mBAAqB,WACnB,MAA+B,EAAKN,MACpC,OADA,EAAQG,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBE,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,IAAM,EAAKN,KAAQ,EAAKG,uB,EAG7Cf,gBAAkB,SAAAO,GAChB,IAAMY,EAAQZ,EAAMa,OAAOC,YAAYC,cACvC,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAQK,EAAUL,GAAS,O,4CAIhC,WACE,MAA+BM,KAAKhB,MAA5BG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBY,EAAgBD,KAAKV,qBACrBY,EAAqBF,KAAKT,kCAEhC,OACE,qCACE,cAACxB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACK,EAAD,CACEC,QAAS6B,OAAOC,KAAKJ,KAAKhB,OAC1BT,gBAAiByB,KAAKzB,sBAG1B,cAAC8B,EAAA,aAAD,IACA,cAACtC,EAAD,CAASC,MAAM,aAAf,SACE,cAAC,EAAD,CACEmB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLiB,MAAOL,EACPC,mBAAoBA,a,GA3CdjB,aAmDHC,ICrDfqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3b63957b.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport { Section };\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return options.map(option => (\n    <div className={s.btnConteiner}>\n      <button\n        key={option}\n        className={s.btn}\n        type=\"button\"\n        onClick={event => onLeaveFeedback(event)}\n      >\n        {option}\n      </button>\n    </div>\n  ));\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport { FeedbackOptions };\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nclass Statistics extends Component {\n  state = {};\n}\n\nexport { Statistics };\n","import React, { Component } from 'react';\n\nimport { Section } from './components/Section/Section';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Notification } from './components/Notification/Notification';\nimport { Statistics } from './components/Statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((100 * this.good) / this.countTotalFeedback());\n  };\n\n  onLeaveFeedback = event => {\n    const value = event.target.textContent.toLowerCase();\n    this.setState(prevState => ({\n      [value]: prevState[value] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback()}\n          />\n        </Section>\n        <Notification />\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positivePercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}